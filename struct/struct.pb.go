// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: struct.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=Payload,json=payload,proto3" json:"Payload,omitempty"`
}

func (x *TX) Reset() {
	*x = TX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TX) ProtoMessage() {}

func (x *TX) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TX.ProtoReflect.Descriptor instead.
func (*TX) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{0}
}

func (x *TX) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TXs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//int64 Timestamp=1;
	Txs [][]byte `protobuf:"bytes,2,rep,name=Txs,json=txs,proto3" json:"Txs,omitempty"`
}

func (x *TXs) Reset() {
	*x = TXs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TXs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TXs) ProtoMessage() {}

func (x *TXs) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TXs.ProtoReflect.Descriptor instead.
func (*TXs) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{1}
}

func (x *TXs) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

type TxPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=ChannelID,json=channelID,proto3" json:"ChannelID,omitempty"`
	IsConfig  bool   `protobuf:"varint,2,opt,name=IsConfig,json=isConfig,proto3" json:"IsConfig,omitempty"`
	Payloads  []byte `protobuf:"bytes,3,opt,name=Payloads,json=payloads,proto3" json:"Payloads,omitempty"`
}

func (x *TxPool) Reset() {
	*x = TxPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPool) ProtoMessage() {}

func (x *TxPool) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPool.ProtoReflect.Descriptor instead.
func (*TxPool) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{2}
}

func (x *TxPool) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *TxPool) GetIsConfig() bool {
	if x != nil {
		return x.IsConfig
	}
	return false
}

func (x *TxPool) GetPayloads() []byte {
	if x != nil {
		return x.Payloads
	}
	return nil
}

//uni struct for broadcast
type BCMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"` //1: BCBlock; 2: Payback; 3: CallHelp; 4: Help(similar to BCBlock)
	Content []byte `protobuf:"bytes,2,opt,name=Content,json=content,proto3" json:"Content,omitempty"`
}

func (x *BCMsg) Reset() {
	*x = BCMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BCMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BCMsg) ProtoMessage() {}

func (x *BCMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BCMsg.ProtoReflect.Descriptor instead.
func (*BCMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{3}
}

func (x *BCMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BCMsg) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

//msg struct for broadcast leader to follower
type BCBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawBC      *RawBC          `protobuf:"bytes,1,opt,name=RawBC,json=rawBC,proto3" json:"RawBC,omitempty"`
	Payload    []byte          `protobuf:"bytes,2,opt,name=Payload,json=payload,proto3" json:"Payload,omitempty"`
	Sign       *Signature      `protobuf:"bytes,3,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	BatchSigns *BatchSignature `protobuf:"bytes,4,opt,name=BatchSigns,json=batchSigns,proto3" json:"BatchSigns,omitempty"`
}

func (x *BCBlock) Reset() {
	*x = BCBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BCBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BCBlock) ProtoMessage() {}

func (x *BCBlock) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BCBlock.ProtoReflect.Descriptor instead.
func (*BCBlock) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{4}
}

func (x *BCBlock) GetRawBC() *RawBC {
	if x != nil {
		return x.RawBC
	}
	return nil
}

func (x *BCBlock) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BCBlock) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *BCBlock) GetBatchSigns() *BatchSignature {
	if x != nil {
		return x.BatchSigns
	}
	return nil
}

type RBCMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int32           `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Leader int32           `protobuf:"varint,2,opt,name=Leader,json=leader,proto3" json:"Leader,omitempty"`
	K      int32           `protobuf:"varint,3,opt,name=K,json=k,proto3" json:"K,omitempty"`
	Round  int32           `protobuf:"varint,4,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	Type   int32           `protobuf:"varint,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"` //1 for ready 2 for echo
	Msglen int32           `protobuf:"varint,6,opt,name=Msglen,json=msglen,proto3" json:"Msglen,omitempty"`
	Root   []byte          `protobuf:"bytes,7,opt,name=Root,json=root,proto3" json:"Root,omitempty"`       //store root
	Values [][]byte        `protobuf:"bytes,8,rep,name=Values,json=values,proto3" json:"Values,omitempty"` //store path
	Sign   *Signature      `protobuf:"bytes,9,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	SS     *BatchSignature `protobuf:"bytes,10,opt,name=SS,json=sS,proto3" json:"SS,omitempty"` //used when bound memory
}

func (x *RBCMsg) Reset() {
	*x = RBCMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBCMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBCMsg) ProtoMessage() {}

func (x *RBCMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBCMsg.ProtoReflect.Descriptor instead.
func (*RBCMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{5}
}

func (x *RBCMsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RBCMsg) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *RBCMsg) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *RBCMsg) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *RBCMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RBCMsg) GetMsglen() int32 {
	if x != nil {
		return x.Msglen
	}
	return 0
}

func (x *RBCMsg) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *RBCMsg) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *RBCMsg) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *RBCMsg) GetSS() *BatchSignature {
	if x != nil {
		return x.SS
	}
	return nil
}

type WRBCMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32           `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Leader  int32           `protobuf:"varint,2,opt,name=Leader,json=leader,proto3" json:"Leader,omitempty"`
	K       int32           `protobuf:"varint,3,opt,name=K,json=k,proto3" json:"K,omitempty"`
	Round   int32           `protobuf:"varint,4,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	Type    int32           `protobuf:"varint,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`         //1 for ready 2 for echo
	Content []byte          `protobuf:"bytes,6,opt,name=Content,json=content,proto3" json:"Content,omitempty"` //store root
	Value   []byte          `protobuf:"bytes,7,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	Sign    *Signature      `protobuf:"bytes,8,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"` //used when bound memory
	SS      *BatchSignature `protobuf:"bytes,9,opt,name=SS,json=sS,proto3" json:"SS,omitempty"`       //used when bound memory
}

func (x *WRBCMsg) Reset() {
	*x = WRBCMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WRBCMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WRBCMsg) ProtoMessage() {}

func (x *WRBCMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WRBCMsg.ProtoReflect.Descriptor instead.
func (*WRBCMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{6}
}

func (x *WRBCMsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WRBCMsg) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *WRBCMsg) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *WRBCMsg) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *WRBCMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WRBCMsg) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WRBCMsg) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *WRBCMsg) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *WRBCMsg) GetSS() *BatchSignature {
	if x != nil {
		return x.SS
	}
	return nil
}

type BatchSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signs []byte  `protobuf:"bytes,1,opt,name=Signs,json=signs,proto3" json:"Signs,omitempty"`
	Mems  []int32 `protobuf:"varint,2,rep,packed,name=mems,proto3" json:"mems,omitempty"`
}

func (x *BatchSignature) Reset() {
	*x = BatchSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSignature) ProtoMessage() {}

func (x *BatchSignature) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSignature.ProtoReflect.Descriptor instead.
func (*BatchSignature) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{7}
}

func (x *BatchSignature) GetSigns() []byte {
	if x != nil {
		return x.Signs
	}
	return nil
}

func (x *BatchSignature) GetMems() []int32 {
	if x != nil {
		return x.Mems
	}
	return nil
}

type RawBC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lastblkid []byte `protobuf:"bytes,1,opt,name=Lastblkid,json=lastblkid,proto3" json:"Lastblkid,omitempty"`
	Height    int32  `protobuf:"varint,2,opt,name=Height,json=height,proto3" json:"Height,omitempty"`
	Root      []byte `protobuf:"bytes,3,opt,name=Root,json=root,proto3" json:"Root,omitempty"`
	Leader    int32  `protobuf:"varint,4,opt,name=Leader,json=leader,proto3" json:"Leader,omitempty"`
	K         int32  `protobuf:"varint,5,opt,name=K,json=k,proto3" json:"K,omitempty"`
	Timestamp int64  `protobuf:"varint,6,opt,name=Timestamp,json=timestamp,proto3" json:"Timestamp,omitempty"`
	Txcount   int32  `protobuf:"varint,7,opt,name=Txcount,json=txcount,proto3" json:"Txcount,omitempty"`
}

func (x *RawBC) Reset() {
	*x = RawBC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawBC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawBC) ProtoMessage() {}

func (x *RawBC) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawBC.ProtoReflect.Descriptor instead.
func (*RawBC) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{8}
}

func (x *RawBC) GetLastblkid() []byte {
	if x != nil {
		return x.Lastblkid
	}
	return nil
}

func (x *RawBC) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RawBC) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *RawBC) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *RawBC) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *RawBC) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RawBC) GetTxcount() int32 {
	if x != nil {
		return x.Txcount
	}
	return 0
}

//msg struct for broadcast follower to leader
type PayBack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round int32      `protobuf:"varint,1,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	BlkID []byte     `protobuf:"bytes,2,opt,name=BlkID,json=blkID,proto3" json:"BlkID,omitempty"`
	Sign  *Signature `protobuf:"bytes,3,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	ID    int32      `protobuf:"varint,4,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
}

func (x *PayBack) Reset() {
	*x = PayBack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayBack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayBack) ProtoMessage() {}

func (x *PayBack) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayBack.ProtoReflect.Descriptor instead.
func (*PayBack) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{9}
}

func (x *PayBack) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *PayBack) GetBlkID() []byte {
	if x != nil {
		return x.BlkID
	}
	return nil
}

func (x *PayBack) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *PayBack) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

//msg for broadcast call help
type CallHelp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round  int32 `protobuf:"varint,1,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	ID     int32 `protobuf:"varint,2,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Leader int32 `protobuf:"varint,3,opt,name=Leader,json=leader,proto3" json:"Leader,omitempty"`
	K      int32 `protobuf:"varint,4,opt,name=K,json=k,proto3" json:"K,omitempty"`
}

func (x *CallHelp) Reset() {
	*x = CallHelp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallHelp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallHelp) ProtoMessage() {}

func (x *CallHelp) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallHelp.ProtoReflect.Descriptor instead.
func (*CallHelp) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{10}
}

func (x *CallHelp) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *CallHelp) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CallHelp) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *CallHelp) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

//msg for order call help
type CallHelpOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round      int32        `protobuf:"varint,1,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	ID         int32        `protobuf:"varint,2,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	MissBlocks []*MissBlock `protobuf:"bytes,3,rep,name=MissBlocks,json=missBlocks,proto3" json:"MissBlocks,omitempty"`
}

func (x *CallHelpOrder) Reset() {
	*x = CallHelpOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallHelpOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallHelpOrder) ProtoMessage() {}

func (x *CallHelpOrder) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallHelpOrder.ProtoReflect.Descriptor instead.
func (*CallHelpOrder) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{11}
}

func (x *CallHelpOrder) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *CallHelpOrder) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CallHelpOrder) GetMissBlocks() []*MissBlock {
	if x != nil {
		return x.MissBlocks
	}
	return nil
}

type MissBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lid         int32   `protobuf:"varint,1,opt,name=Lid,json=lid,proto3" json:"Lid,omitempty"`
	Sid         int32   `protobuf:"varint,2,opt,name=Sid,json=sid,proto3" json:"Sid,omitempty"`
	MissHeights []int32 `protobuf:"varint,3,rep,packed,name=MissHeights,json=missHeights,proto3" json:"MissHeights,omitempty"` //index of missing blocks
}

func (x *MissBlock) Reset() {
	*x = MissBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissBlock) ProtoMessage() {}

func (x *MissBlock) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissBlock.ProtoReflect.Descriptor instead.
func (*MissBlock) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{12}
}

func (x *MissBlock) GetLid() int32 {
	if x != nil {
		return x.Lid
	}
	return 0
}

func (x *MissBlock) GetSid() int32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *MissBlock) GetMissHeights() []int32 {
	if x != nil {
		return x.MissHeights
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rawblk     *RawBlock       `protobuf:"bytes,1,opt,name=Rawblk,json=rawblk,proto3" json:"Rawblk,omitempty"`
	Payloads   []byte          `protobuf:"bytes,2,opt,name=Payloads,json=payloads,proto3" json:"Payloads,omitempty"`
	Sign       *Signature      `protobuf:"bytes,4,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	BatchSigns *BatchSignature `protobuf:"bytes,5,opt,name=BatchSigns,json=batchSigns,proto3" json:"BatchSigns,omitempty"`
	Lastblkid  []byte          `protobuf:"bytes,6,opt,name=Lastblkid,json=lastblkid,proto3" json:"Lastblkid,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{13}
}

func (x *Block) GetRawblk() *RawBlock {
	if x != nil {
		return x.Rawblk
	}
	return nil
}

func (x *Block) GetPayloads() []byte {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *Block) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *Block) GetBatchSigns() *BatchSignature {
	if x != nil {
		return x.BatchSigns
	}
	return nil
}

func (x *Block) GetLastblkid() []byte {
	if x != nil {
		return x.Lastblkid
	}
	return nil
}

type RawBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int32  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Root   []byte `protobuf:"bytes,2,opt,name=Root,json=root,proto3" json:"Root,omitempty"`
}

func (x *RawBlock) Reset() {
	*x = RawBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawBlock) ProtoMessage() {}

func (x *RawBlock) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawBlock.ProtoReflect.Descriptor instead.
func (*RawBlock) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{14}
}

func (x *RawBlock) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RawBlock) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type HighProofs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HPs []*HighProof `protobuf:"bytes,1,rep,name=HPs,json=hPs,proto3" json:"HPs,omitempty"`
}

func (x *HighProofs) Reset() {
	*x = HighProofs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighProofs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighProofs) ProtoMessage() {}

func (x *HighProofs) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighProofs.ProtoReflect.Descriptor instead.
func (*HighProofs) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{15}
}

func (x *HighProofs) GetHPs() []*HighProof {
	if x != nil {
		return x.HPs
	}
	return nil
}

//new type
type QCaggProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggQC       []byte   `protobuf:"bytes,1,opt,name=AggQC,json=aggQC,proto3" json:"AggQC,omitempty"`
	MessageHash [][]byte `protobuf:"bytes,2,rep,name=MessageHash,json=messageHash,proto3" json:"MessageHash,omitempty"`
	Heights     []int32  `protobuf:"varint,3,rep,packed,name=Heights,json=heights,proto3" json:"Heights,omitempty"`
	IDs         []int32  `protobuf:"varint,4,rep,packed,name=IDs,json=iDs,proto3" json:"IDs,omitempty"`
	Mems        [][]byte `protobuf:"bytes,5,rep,name=Mems,json=mems,proto3" json:"Mems,omitempty"`
}

func (x *QCaggProof) Reset() {
	*x = QCaggProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QCaggProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QCaggProof) ProtoMessage() {}

func (x *QCaggProof) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QCaggProof.ProtoReflect.Descriptor instead.
func (*QCaggProof) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{16}
}

func (x *QCaggProof) GetAggQC() []byte {
	if x != nil {
		return x.AggQC
	}
	return nil
}

func (x *QCaggProof) GetMessageHash() [][]byte {
	if x != nil {
		return x.MessageHash
	}
	return nil
}

func (x *QCaggProof) GetHeights() []int32 {
	if x != nil {
		return x.Heights
	}
	return nil
}

func (x *QCaggProof) GetIDs() []int32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *QCaggProof) GetMems() [][]byte {
	if x != nil {
		return x.Mems
	}
	return nil
}

type HighProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawBC      *RawBC          `protobuf:"bytes,1,opt,name=RawBC,json=rawBC,proto3" json:"RawBC,omitempty"`
	Sign       *Signature      `protobuf:"bytes,4,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	BatchSigns *BatchSignature `protobuf:"bytes,5,opt,name=BatchSigns,json=batchSigns,proto3" json:"BatchSigns,omitempty"`
}

func (x *HighProof) Reset() {
	*x = HighProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighProof) ProtoMessage() {}

func (x *HighProof) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighProof.ProtoReflect.Descriptor instead.
func (*HighProof) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{17}
}

func (x *HighProof) GetRawBC() *RawBC {
	if x != nil {
		return x.RawBC
	}
	return nil
}

func (x *HighProof) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *HighProof) GetBatchSigns() *BatchSignature {
	if x != nil {
		return x.BatchSigns
	}
	return nil
}

type HeightRBC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heights []int32 `protobuf:"varint,1,rep,packed,name=Heights,json=heights,proto3" json:"Heights,omitempty"`
}

func (x *HeightRBC) Reset() {
	*x = HeightRBC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeightRBC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightRBC) ProtoMessage() {}

func (x *HeightRBC) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightRBC.ProtoReflect.Descriptor instead.
func (*HeightRBC) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{18}
}

func (x *HeightRBC) GetHeights() []int32 {
	if x != nil {
		return x.Heights
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32  `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{19}
}

func (x *Signature) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Signature) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       bool            `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	BatchSigns *BatchSignature `protobuf:"bytes,2,opt,name=BatchSigns,json=batchSigns,proto3" json:"BatchSigns,omitempty"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{20}
}

func (x *Proof) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *Proof) GetBatchSigns() *BatchSignature {
	if x != nil {
		return x.BatchSigns
	}
	return nil
}

type OrderMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"` //1:proto msg  2:callhelp msg 3:help msg 4:dumbomvba msg
	Content []byte `protobuf:"bytes,2,opt,name=Content,json=content,proto3" json:"Content,omitempty"`
}

func (x *OrderMsg) Reset() {
	*x = OrderMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMsg) ProtoMessage() {}

func (x *OrderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMsg.ProtoReflect.Descriptor instead.
func (*OrderMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{21}
}

func (x *OrderMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderMsg) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawMsg   *RawMsg         `protobuf:"bytes,1,opt,name=RawMsg,json=rawMsg,proto3" json:"RawMsg,omitempty"`
	Sign     *Signature      `protobuf:"bytes,5,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	SS       *BatchSignature `protobuf:"bytes,6,opt,name=SS,json=sS,proto3" json:"SS,omitempty"`
	SS2      *BatchSignature `protobuf:"bytes,7,opt,name=SS2,json=sS2,proto3" json:"SS2,omitempty"`
	OldProof []*Proof        `protobuf:"bytes,8,rep,name=OldProof,json=oldProof,proto3" json:"OldProof,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{22}
}

func (x *Msg) GetRawMsg() *RawMsg {
	if x != nil {
		return x.RawMsg
	}
	return nil
}

func (x *Msg) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *Msg) GetSS() *BatchSignature {
	if x != nil {
		return x.SS
	}
	return nil
}

func (x *Msg) GetSS2() *BatchSignature {
	if x != nil {
		return x.SS2
	}
	return nil
}

func (x *Msg) GetOldProof() []*Proof {
	if x != nil {
		return x.OldProof
	}
	return nil
}

//type 1-11
type RawMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int32  `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Round  int32  `protobuf:"varint,2,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	Type   int32  `protobuf:"varint,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Values []byte `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`
	Loop   int32  `protobuf:"varint,6,opt,name=Loop,json=loop,proto3" json:"Loop,omitempty"`
}

func (x *RawMsg) Reset() {
	*x = RawMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMsg) ProtoMessage() {}

func (x *RawMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMsg.ProtoReflect.Descriptor instead.
func (*RawMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{23}
}

func (x *RawMsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RawMsg) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *RawMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RawMsg) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *RawMsg) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

type DumbomvbaMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int32           `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	Round  int32           `protobuf:"varint,2,opt,name=Round,json=round,proto3" json:"Round,omitempty"`
	Type   int32           `protobuf:"varint,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Msglen int32           `protobuf:"varint,4,opt,name=Msglen,json=msglen,proto3" json:"Msglen,omitempty"`
	Values [][]byte        `protobuf:"bytes,5,rep,name=Values,json=values,proto3" json:"Values,omitempty"`
	Sign   *Signature      `protobuf:"bytes,6,opt,name=Sign,json=sign,proto3" json:"Sign,omitempty"`
	SS     *BatchSignature `protobuf:"bytes,7,opt,name=SS,json=sS,proto3" json:"SS,omitempty"`
}

func (x *DumbomvbaMsg) Reset() {
	*x = DumbomvbaMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumbomvbaMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumbomvbaMsg) ProtoMessage() {}

func (x *DumbomvbaMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumbomvbaMsg.ProtoReflect.Descriptor instead.
func (*DumbomvbaMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{24}
}

func (x *DumbomvbaMsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DumbomvbaMsg) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *DumbomvbaMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DumbomvbaMsg) GetMsglen() int32 {
	if x != nil {
		return x.Msglen
	}
	return 0
}

func (x *DumbomvbaMsg) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *DumbomvbaMsg) GetSign() *Signature {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *DumbomvbaMsg) GetSS() *BatchSignature {
	if x != nil {
		return x.SS
	}
	return nil
}

type BAMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,json=iD,proto3" json:"ID,omitempty"`
	MVBARound int32  `protobuf:"varint,2,opt,name=MVBARound,json=mVBARound,proto3" json:"MVBARound,omitempty"`
	BARound   int32  `protobuf:"varint,3,opt,name=BARound,json=bARound,proto3" json:"BARound,omitempty"`
	Loop      int32  `protobuf:"varint,4,opt,name=Loop,json=loop,proto3" json:"Loop,omitempty"`
	Type      int32  `protobuf:"varint,5,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Value     bool   `protobuf:"varint,6,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	ConfValue []bool `protobuf:"varint,7,rep,packed,name=ConfValue,json=confValue,proto3" json:"ConfValue,omitempty"`
}

func (x *BAMsg) Reset() {
	*x = BAMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BAMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BAMsg) ProtoMessage() {}

func (x *BAMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BAMsg.ProtoReflect.Descriptor instead.
func (*BAMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{25}
}

func (x *BAMsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BAMsg) GetMVBARound() int32 {
	if x != nil {
		return x.MVBARound
	}
	return 0
}

func (x *BAMsg) GetBARound() int32 {
	if x != nil {
		return x.BARound
	}
	return 0
}

func (x *BAMsg) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

func (x *BAMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BAMsg) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *BAMsg) GetConfValue() []bool {
	if x != nil {
		return x.ConfValue
	}
	return nil
}

type SRcvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rcv []bool `protobuf:"varint,1,rep,packed,name=Rcv,json=rcv,proto3" json:"Rcv,omitempty"`
}

func (x *SRcvs) Reset() {
	*x = SRcvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRcvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRcvs) ProtoMessage() {}

func (x *SRcvs) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRcvs.ProtoReflect.Descriptor instead.
func (*SRcvs) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{26}
}

func (x *SRcvs) GetRcv() []bool {
	if x != nil {
		return x.Rcv
	}
	return nil
}

type Ctvote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memid int32    `protobuf:"varint,1,opt,name=Memid,json=memid,proto3" json:"Memid,omitempty"`
	Vote  bool     `protobuf:"varint,2,opt,name=Vote,json=vote,proto3" json:"Vote,omitempty"`
	Proof [][]byte `protobuf:"bytes,3,rep,name=Proof,json=proof,proto3" json:"Proof,omitempty"`
	Data  []byte   `protobuf:"bytes,4,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
}

func (x *Ctvote) Reset() {
	*x = Ctvote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ctvote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ctvote) ProtoMessage() {}

func (x *Ctvote) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ctvote.ProtoReflect.Descriptor instead.
func (*Ctvote) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{27}
}

func (x *Ctvote) GetMemid() int32 {
	if x != nil {
		return x.Memid
	}
	return 0
}

func (x *Ctvote) GetVote() bool {
	if x != nil {
		return x.Vote
	}
	return false
}

func (x *Ctvote) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Ctvote) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type EnvMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainID  string `protobuf:"bytes,1,opt,name=ChainID,json=chainID,proto3" json:"ChainID,omitempty"`
	IsConfig bool   `protobuf:"varint,2,opt,name=IsConfig,json=isConfig,proto3" json:"IsConfig,omitempty"`
	Env      []byte `protobuf:"bytes,3,opt,name=Env,json=env,proto3" json:"Env,omitempty"`
}

func (x *EnvMsg) Reset() {
	*x = EnvMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvMsg) ProtoMessage() {}

func (x *EnvMsg) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvMsg.ProtoReflect.Descriptor instead.
func (*EnvMsg) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{28}
}

func (x *EnvMsg) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *EnvMsg) GetIsConfig() bool {
	if x != nil {
		return x.IsConfig
	}
	return false
}

func (x *EnvMsg) GetEnv() []byte {
	if x != nil {
		return x.Env
	}
	return nil
}

type Cutblock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocksinnode []*Blockinnode `protobuf:"bytes,1,rep,name=Blocksinnode,json=blocksinnode,proto3" json:"Blocksinnode,omitempty"`
}

func (x *Cutblock) Reset() {
	*x = Cutblock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cutblock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cutblock) ProtoMessage() {}

func (x *Cutblock) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cutblock.ProtoReflect.Descriptor instead.
func (*Cutblock) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{29}
}

func (x *Cutblock) GetBlocksinnode() []*Blockinnode {
	if x != nil {
		return x.Blocksinnode
	}
	return nil
}

type Blockinnode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlocksinK []*BlockinK `protobuf:"bytes,1,rep,name=BlocksinK,json=blocksinK,proto3" json:"BlocksinK,omitempty"`
}

func (x *Blockinnode) Reset() {
	*x = Blockinnode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blockinnode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blockinnode) ProtoMessage() {}

func (x *Blockinnode) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blockinnode.ProtoReflect.Descriptor instead.
func (*Blockinnode) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{30}
}

func (x *Blockinnode) GetBlocksinK() []*BlockinK {
	if x != nil {
		return x.BlocksinK
	}
	return nil
}

type BlockinK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BCBlocks []*BCBlock `protobuf:"bytes,1,rep,name=BCBlocks,json=bCBlocks,proto3" json:"BCBlocks,omitempty"`
}

func (x *BlockinK) Reset() {
	*x = BlockinK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_struct_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockinK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockinK) ProtoMessage() {}

func (x *BlockinK) ProtoReflect() protoreflect.Message {
	mi := &file_struct_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockinK.ProtoReflect.Descriptor instead.
func (*BlockinK) Descriptor() ([]byte, []int) {
	return file_struct_proto_rawDescGZIP(), []int{31}
}

func (x *BlockinK) GetBCBlocks() []*BCBlock {
	if x != nil {
		return x.BCBlocks
	}
	return nil
}

var File_struct_proto protoreflect.FileDescriptor

var file_struct_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x1e, 0x0a, 0x02, 0x54, 0x58, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x17, 0x0a, 0x03, 0x54, 0x58, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x54, 0x78, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22,
	0x5e, 0x0a, 0x06, 0x54, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22,
	0x35, 0x0a, 0x05, 0x42, 0x43, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x07, 0x42, 0x43, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x23, 0x0a, 0x05, 0x52, 0x61, 0x77, 0x42, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x42, 0x43,
	0x52, 0x05, 0x72, 0x61, 0x77, 0x42, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x73,
	0x22, 0xfb, 0x01, 0x0a, 0x06, 0x52, 0x42, 0x43, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x73, 0x67, 0x6c, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x73, 0x67,
	0x6c, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x26, 0x0a, 0x02, 0x53, 0x53, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x02, 0x73, 0x53, 0x22, 0xe8,
	0x01, 0x0a, 0x07, 0x57, 0x52, 0x42, 0x43, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x26, 0x0a, 0x02, 0x53, 0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x02, 0x73, 0x53, 0x22, 0x3a, 0x0a, 0x0e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x69, 0x67, 0x6e,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x6d, 0x65, 0x6d, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x52, 0x61, 0x77, 0x42, 0x43, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x62, 0x6c, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x62, 0x6c, 0x6b, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x0c, 0x0a, 0x01, 0x4b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x78, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x78, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x42, 0x61,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6c, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6b, 0x49, 0x44, 0x12, 0x25,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x44, 0x22, 0x56, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x6c,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x4b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6b, 0x22, 0x68, 0x0a,
	0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x6c, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x44, 0x12, 0x31, 0x0a, 0x0a, 0x4d, 0x69, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x6d, 0x69, 0x73,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x51, 0x0a, 0x09, 0x4d, 0x69, 0x73, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6c, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x69, 0x73, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x06, 0x52, 0x61, 0x77, 0x62, 0x6c, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61,
	0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x72, 0x61, 0x77, 0x62, 0x6c, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73,
	0x74, 0x62, 0x6c, 0x6b, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x62, 0x6c, 0x6b, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52,
	0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22,
	0x31, 0x0a, 0x0a, 0x48, 0x69, 0x67, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x12, 0x23, 0x0a,
	0x03, 0x48, 0x50, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x03, 0x68,
	0x50, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x51, 0x43, 0x61, 0x67, 0x67, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x67, 0x67, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x61, 0x67, 0x67, 0x51, 0x43, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x03, 0x69, 0x44, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x48, 0x69,
	0x67, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x23, 0x0a, 0x05, 0x52, 0x61, 0x77, 0x42, 0x43,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x52, 0x61, 0x77, 0x42, 0x43, 0x52, 0x05, 0x72, 0x61, 0x77, 0x42, 0x43, 0x12, 0x25, 0x0a, 0x04,
	0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x25, 0x0a, 0x09, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x42, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x05, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x38,
	0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x26, 0x0a, 0x06, 0x52, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x73, 0x67,
	0x52, 0x06, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12,
	0x26, 0x0a, 0x02, 0x53, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x02, 0x73, 0x53, 0x12, 0x28, 0x0a, 0x03, 0x53, 0x53, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x73, 0x53,
	0x32, 0x12, 0x29, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x6e, 0x0a, 0x06,
	0x52, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6f, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x22, 0xc7, 0x01, 0x0a,
	0x0c, 0x44, 0x75, 0x6d, 0x62, 0x6f, 0x6d, 0x76, 0x62, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x6c, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x6c, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x26,
	0x0a, 0x02, 0x53, 0x53, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x02, 0x73, 0x53, 0x22, 0xab, 0x01, 0x0a, 0x05, 0x42, 0x41, 0x4d, 0x73, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x56, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x56, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6f, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x19, 0x0a, 0x05, 0x53, 0x52, 0x63, 0x76, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x63, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x03, 0x72, 0x63, 0x76, 0x22,
	0x5c, 0x0a, 0x06, 0x43, 0x74, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x65, 0x6d, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76,
	0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a,
	0x06, 0x45, 0x6e, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x45, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22,
	0x43, 0x0a, 0x08, 0x43, 0x75, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x69, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x6e,
	0x6e, 0x6f, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x6e, 0x4b,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x4b, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x69, 0x6e, 0x4b, 0x22, 0x37, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x4b, 0x12,
	0x2b, 0x0a, 0x08, 0x42, 0x43, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x43, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x08, 0x62, 0x43, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42, 0x04, 0x5a, 0x02,
	0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_struct_proto_rawDescOnce sync.Once
	file_struct_proto_rawDescData = file_struct_proto_rawDesc
)

func file_struct_proto_rawDescGZIP() []byte {
	file_struct_proto_rawDescOnce.Do(func() {
		file_struct_proto_rawDescData = protoimpl.X.CompressGZIP(file_struct_proto_rawDescData)
	})
	return file_struct_proto_rawDescData
}

var file_struct_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_struct_proto_goTypes = []interface{}{
	(*TX)(nil),             // 0: struct.TX
	(*TXs)(nil),            // 1: struct.TXs
	(*TxPool)(nil),         // 2: struct.TxPool
	(*BCMsg)(nil),          // 3: struct.BCMsg
	(*BCBlock)(nil),        // 4: struct.BCBlock
	(*RBCMsg)(nil),         // 5: struct.RBCMsg
	(*WRBCMsg)(nil),        // 6: struct.WRBCMsg
	(*BatchSignature)(nil), // 7: struct.BatchSignature
	(*RawBC)(nil),          // 8: struct.RawBC
	(*PayBack)(nil),        // 9: struct.PayBack
	(*CallHelp)(nil),       // 10: struct.CallHelp
	(*CallHelpOrder)(nil),  // 11: struct.CallHelpOrder
	(*MissBlock)(nil),      // 12: struct.MissBlock
	(*Block)(nil),          // 13: struct.Block
	(*RawBlock)(nil),       // 14: struct.RawBlock
	(*HighProofs)(nil),     // 15: struct.HighProofs
	(*QCaggProof)(nil),     // 16: struct.QCaggProof
	(*HighProof)(nil),      // 17: struct.HighProof
	(*HeightRBC)(nil),      // 18: struct.HeightRBC
	(*Signature)(nil),      // 19: struct.Signature
	(*Proof)(nil),          // 20: struct.Proof
	(*OrderMsg)(nil),       // 21: struct.OrderMsg
	(*Msg)(nil),            // 22: struct.Msg
	(*RawMsg)(nil),         // 23: struct.RawMsg
	(*DumbomvbaMsg)(nil),   // 24: struct.DumbomvbaMsg
	(*BAMsg)(nil),          // 25: struct.BAMsg
	(*SRcvs)(nil),          // 26: struct.SRcvs
	(*Ctvote)(nil),         // 27: struct.Ctvote
	(*EnvMsg)(nil),         // 28: struct.EnvMsg
	(*Cutblock)(nil),       // 29: struct.Cutblock
	(*Blockinnode)(nil),    // 30: struct.Blockinnode
	(*BlockinK)(nil),       // 31: struct.BlockinK
}
var file_struct_proto_depIdxs = []int32{
	8,  // 0: struct.BCBlock.RawBC:type_name -> struct.RawBC
	19, // 1: struct.BCBlock.Sign:type_name -> struct.Signature
	7,  // 2: struct.BCBlock.BatchSigns:type_name -> struct.BatchSignature
	19, // 3: struct.RBCMsg.Sign:type_name -> struct.Signature
	7,  // 4: struct.RBCMsg.SS:type_name -> struct.BatchSignature
	19, // 5: struct.WRBCMsg.Sign:type_name -> struct.Signature
	7,  // 6: struct.WRBCMsg.SS:type_name -> struct.BatchSignature
	19, // 7: struct.PayBack.Sign:type_name -> struct.Signature
	12, // 8: struct.CallHelpOrder.MissBlocks:type_name -> struct.MissBlock
	14, // 9: struct.Block.Rawblk:type_name -> struct.RawBlock
	19, // 10: struct.Block.Sign:type_name -> struct.Signature
	7,  // 11: struct.Block.BatchSigns:type_name -> struct.BatchSignature
	17, // 12: struct.HighProofs.HPs:type_name -> struct.HighProof
	8,  // 13: struct.HighProof.RawBC:type_name -> struct.RawBC
	19, // 14: struct.HighProof.Sign:type_name -> struct.Signature
	7,  // 15: struct.HighProof.BatchSigns:type_name -> struct.BatchSignature
	7,  // 16: struct.Proof.BatchSigns:type_name -> struct.BatchSignature
	23, // 17: struct.Msg.RawMsg:type_name -> struct.RawMsg
	19, // 18: struct.Msg.Sign:type_name -> struct.Signature
	7,  // 19: struct.Msg.SS:type_name -> struct.BatchSignature
	7,  // 20: struct.Msg.SS2:type_name -> struct.BatchSignature
	20, // 21: struct.Msg.OldProof:type_name -> struct.Proof
	19, // 22: struct.DumbomvbaMsg.Sign:type_name -> struct.Signature
	7,  // 23: struct.DumbomvbaMsg.SS:type_name -> struct.BatchSignature
	30, // 24: struct.Cutblock.Blocksinnode:type_name -> struct.Blockinnode
	31, // 25: struct.Blockinnode.BlocksinK:type_name -> struct.BlockinK
	4,  // 26: struct.BlockinK.BCBlocks:type_name -> struct.BCBlock
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_struct_proto_init() }
func file_struct_proto_init() {
	if File_struct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_struct_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TXs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BCMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BCBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBCMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WRBCMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawBC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayBack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallHelp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallHelpOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighProofs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QCaggProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeightRBC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumbomvbaMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BAMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRcvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ctvote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cutblock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blockinnode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_struct_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockinK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_struct_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_struct_proto_goTypes,
		DependencyIndexes: file_struct_proto_depIdxs,
		MessageInfos:      file_struct_proto_msgTypes,
	}.Build()
	File_struct_proto = out.File
	file_struct_proto_rawDesc = nil
	file_struct_proto_goTypes = nil
	file_struct_proto_depIdxs = nil
}
